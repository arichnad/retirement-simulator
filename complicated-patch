diff --git a/simulate.py b/simulate.py
index 3ffa84e..a21e1ac 100755
--- a/simulate.py
+++ b/simulate.py
@@ -6,12 +6,14 @@ from dateutil.relativedelta import relativedelta
 
 def main(argv):
 	try:
-		opts, args = getopt.getopt(argv,'h', ['help', 'no-invest', 'no-inflation'])
+		opts, args = getopt.getopt(argv,'h', ['help', 'no-invest', 'no-inflation', 'returns=', 'inflation='])
 	except getopt.GetoptError:
 		usage()
 		return
 	doInvest=True
 	doInflation=True
+	returns=None
+	inflation=None
 	for opt, arg in opts:
 		if opt in ('-h', '--help'):
 			usage()
@@ -20,15 +22,19 @@ def main(argv):
 			doInvest=False
 		if opt in ('--no-inflation'):
 			doInflation=False
+		if opt in ('--returns'):
+			returns=float(arg)
+		if opt in ('--inflation'):
+			inflation=float(arg)
 	if len(args) < 2:
 		usage()
 		return
-	run(float(args[0]), float(args[1]), doInvest, doInflation)
+	run(float(args[0]), float(args[1]), doInvest, doInflation, returns, inflation)
 
 def usage():
-	print('usage:  python3 simulate.py [--no-invest] [--no-inflation] goalYears percentTakeOut')
+	print('usage:  python3 simulate.py [--no-invest] [--returns=9] [--no-inflation] [--inflation=4] goalYears percentTakeOut')
 
-def run(goalYears, percentTakeOut, doInvest, doInflation):
+def run(goalYears, percentTakeOut, doInvest, doInflation, returns, inflation):
 	startMoneyToTakeOut = (1+percentTakeOut/100)**(1/12) - 1
 
 	cpi={}
@@ -48,13 +54,23 @@ def run(goalYears, percentTakeOut, doInvest, doInflation):
 	goodCount = 0
 	totalCount = 0
 	while startDate < endDate:
+		inflationRatio = 1
+		returnRatio = 1
 		date=startDate
 		startCpi=cpi[date]
-		shares=1/djia[date] if doInvest else 1
+		shares=1/djia[date] if doInvest and returns is None else 1
 		while date < endDate:
-			moneyToTakeOut = startMoneyToTakeOut * (cpi[date] / startCpi if doInflation else 1)
+			if inflation is None:
+				moneyToTakeOut = startMoneyToTakeOut * (cpi[date] / startCpi if doInflation else 1)
+			else:
+				moneyToTakeOut = startMoneyToTakeOut * inflationRatio
+				inflationRatio *= (1+inflation/100)**(1/12)
 			
-			sharesToTakeOut = moneyToTakeOut / ( djia[date] if doInvest else 1 )
+			if returns is None:
+				sharesToTakeOut = moneyToTakeOut / ( djia[date] if doInvest else 1 )
+			else:
+				sharesToTakeOut = moneyToTakeOut * returnRatio
+				returnRatio /= (1+returns/100)**(1/12)
 
 			shares -= sharesToTakeOut
 			#print(moneyToTakeOut, sharesToTakeOut, shares)
